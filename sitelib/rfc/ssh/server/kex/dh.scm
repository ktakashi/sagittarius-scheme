;;; -*- mode:scheme; coding:utf-8; -*-
;;;
;;; rfc/ssh/server/kex/dh.scm - SSH2 server DH KEX
;;;  
;;;   Copyright (c) 2025  Takashi Kato  <ktakashi@ymail.com>
;;;   
;;;   Redistribution and use in source and binary forms, with or without
;;;   modification, are permitted provided that the following conditions
;;;   are met:
;;;   
;;;   1. Redistributions of source code must retain the above copyright
;;;      notice, this list of conditions and the following disclaimer.
;;;  
;;;   2. Redistributions in binary form must reproduce the above copyright
;;;      notice, this list of conditions and the following disclaimer in the
;;;      documentation and/or other materials provided with the distribution.
;;;  
;;;   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
;;;   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
;;;   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
;;;   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
;;;   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
;;;   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
;;;   TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
;;;   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
;;;   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
;;;   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;;;   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;;;  

#!read-macro=sagittarius/regex
#!nounbound
(library (rfc ssh server kex dh)
    (export ssh-server-exchange-kex-message)
    (import (rnrs)
	    (clos user)
	    (sagittarius)
	    (sagittarius object)
	    (sagittarius regex)
	    (sagittarius crypto keys)
	    (sagittarius crypto random)
	    (rfc ssh constants)
	    (rfc ssh crypto)
	    (rfc ssh types)
	    (rfc ssh transport)
	    (rfc ssh transport kex dh)
	    (rfc ssh server kex api))

(define-method ssh-server-exchange-kex-message
  ((m (member ssh-dh-group-exchanges)) transport server-packet client-packet)
  (define (make-reply K-S sig f)
    (make <ssh-msg-kex-dh-gex-reply> :K-S K-S :f f
	  :signature (ssh-message->bytevector sig)))
  (define ((compute-k gex-req p g) K-S init)
    (define e (~ init 'e))
    (let-values (((y f K)
		  (calculate-shared-secret transport p g e (div (- p 1) 2))))
      (values K
	      (make <SSH-GEX-H>
		:V-C (~ transport 'client-version)
		:V-S (~ transport 'server-version)
		:I-C client-packet
		:I-S server-packet
		:K-S K-S
		:min (~ gex-req 'min) :n (~ gex-req 'n) :max (~ gex-req 'max)
		:p p :g g :e e :f f :K K)
	      f)))
  (let* ((packet (ssh-read-packet transport))
	 (gex-req (bytevector->ssh-message <ssh-msg-kex-dh-gex-request> packet)))
    (let-values (((p g) (determine-group gex-req)))
      (if (and p g)
	  (let ((group (make <ssh-msg-kex-dh-gex-group> :p p :g g)))
	    (ssh-write-ssh-message transport group)
	    (ssh-kex-receive/send transport <ssh-msg-kex-dh-gex-init>
				  (compute-k gex-req p g) make-reply))
	  (error 'ssh-server-exchange-kex-message "DH GEX out-of-range")))))

(define-method ssh-server-exchange-kex-message
  ((m (member ssh-dh-groups)) transport server-packet client-packet)
  (define (group-n kex)
    (cond ((#/group(\d+)/ kex) =>
	   (lambda (m) (string->number (m 1))))
	  (else (error 'ssh-exchange-kex-message "must not happen"))))
  (define (make-reply K-S sig f)
    (make <ssh-msg-kexdh-reply> :K-S K-S :f f
	  :signature (ssh-message->bytevector sig)))
  (define (determine-group m)
    (case (group-n m)
      ((1)  (values +dh-group1-p+ +dh-group1-g+))
      ((14) (values +dh-group14-p+ +dh-group14-g+))
      ((15) (values +dh-group15-p+ +dh-group15-g+))
      ((16) (values +dh-group16-p+ +dh-group16-g+))
      ((17) (values +dh-group17-p+ +dh-group17-g+))
      ((18) (values +dh-group18-p+ +dh-group18-g+))
      (else (error 'ssh-exchange-kex-message "unknown group"
		   (~ transport 'kex)))))
  (define ((compute-k p g) K-S init)
    (define e (~ init 'e))
    (let-values (((y f K) (calculate-shared-secret transport p g e p)))
      (values K
	      (make <SSH-DH-H>
		:V-C (~ transport 'client-version)
		:V-S (~ transport 'server-version)
		:I-C client-packet
		:I-S server-packet
		:K-S K-S
		:e e :f f :K K)
	      f)))
  (let-values (((p g) (determine-group m)))
    (ssh-kex-receive/send transport <ssh-msg-kexdh-init> (compute-k p g)
			  make-reply)))

(define (calculate-shared-secret transport p g e r)
  (let* ((y (generate-y (~ transport 'prng) r))
	 (f (mod-expt g y p))
	 (K (mod-expt e y p)))
    (values y f K)))

(define (generate-y prng r)
  (define size (div (bitwise-length r) 8))
  (let loop ()
    (let ((v (bytevector->integer
	      (random-generator-read-random-bytes prng size))))
      (or (and (< 1 v) v)
	  (loop)))))

(define (determine-group gex-req)
  (define input-min (~ gex-req 'min))
  (define input-n   (~ gex-req 'n))
  (define input-max (~ gex-req 'max))
  (let ((v (min (max input-min input-n) input-max)))
    (cond ((or (< v 1024) (< 8192 v)) (values #f #f))
	  ((< v 2048) (values +dh-group1-p+ +dh-group1-g+))
	  ((< v 3072) (values +ffdhe2048+ 2))
	  ((< v 4096) (values +ffdhe3072+ 2))
	  ((< v 6144) (values +ffdhe4096+ 2))
	  ((< v 8192) (values +ffdhe6144+ 2))
	  (else       (values +ffdhe8192+ 2)))))

;; From 2048 bit, the values are taken from RFC 7919
;; ref: https://www.rfc-editor.org/rfc/rfc7919
(define-constant +ffdhe2048+
  #xFFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF97D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD65612433F51F5F066ED0856365553DED1AF3B557135E7F57C935984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE73530ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FBB96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB190B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F619172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD733BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA886B423861285C97FFFFFFFFFFFFFFFF)
(define-constant +ffdhe3072+
  #xFFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF97D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD65612433F51F5F066ED0856365553DED1AF3B557135E7F57C935984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE73530ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FBB96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB190B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F619172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD733BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA886B4238611FCFDCDE355B3B6519035BBC34F4DEF99C023861B46FC9D6E6C9077AD91D2691F7F7EE598CB0FAC186D91CAEFE130985139270B4130C93BC437944F4FD4452E2D74DD364F2E21E71F54BFF5CAE82AB9C9DF69EE86D2BC522363A0DABC521979B0DEADA1DBF9A42D5C4484E0ABCD06BFA53DDEF3C1B20EE3FD59D7C25E41D2B66C62E37FFFFFFFFFFFFFFFF)
(define-constant +ffdhe4096+
  #x
(define-constant +ffdhe6144+
  #x
(define-constant +ffdhe8192+
  #x


)
